{"version":3,"file":"index.7f277c1d.js","sources":["../../vite/modulepreload-polyfill","../../src/components/code-editor/prismjs.vue","../../src/components/props-to-refs.ts","../../src/components/code-editor/RunKit.vue","../../src/components/run-code.vue","../../src/util/vue.composition.api.ts","../../src/util/date.now.ts","../../src/main.ts","../../src/App.vue","../../src/util/use-url-params-obj.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","<template>\r\n  <pre><code ref=\"code\" class=\"language-javascript\">{{props.source}}</code></pre>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { nextTick, onMounted, ref, watchEffect } from \"vue\";\r\nimport Prism from \"prismjs\";\r\nconst props = defineProps({\r\n  source: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n});\r\nconst code = ref<HTMLElement | null>(null);\r\nonMounted(() => {\r\n  watchEffect(() => {\r\n    nextTick(() => {\r\n      Prism.highlightElement(code.value! as HTMLElement);\r\n    });\r\n    // 依赖\r\n    return props.source;\r\n  });\r\n});\r\n</script>\r\n<!-- 这个style 加上 scoped 后高亮就失效了 -->\r\n<style src=\"prismjs/themes/prism.css\"></style>\r\n","import type { ToRefs } from \"vue\";\r\nimport { computed } from \"vue\";\r\nexport function propsToRefs<T extends object>(props: T, emit: (event: any, ...args: any[]) => void): ToRefs<T> {\r\n  const ret: any = {};\r\n  for (const key in props) {\r\n    // ret[key] = toRef(props, key);\r\n    ret[key] = computed({\r\n      get() {\r\n        return props[key];\r\n      },\r\n      set(v) {\r\n        emit(`update:${key}`, v);\r\n      },\r\n    });\r\n  }\r\n  return ret;\r\n}\r\n","<template>\r\n  <pre class=\"embed\" :data-gutter=\"inside\"><div ref=\"element\"></div></pre>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { ref, onMounted, watchEffect, computed } from \"vue\";\r\nimport type { PropType } from \"vue\";\r\nimport { propsToRefs } from \"../props-to-refs\";\r\nconst props = defineProps({\r\n  inside: {\r\n    type: String as PropType<EmbedOptions[\"gutterStyle\"]>,\r\n    default: \"inside\",\r\n    required: true,\r\n  },\r\n  source: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  title: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  preamble: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  version: {\r\n    type: String,\r\n    default: \"16.6.0\",\r\n  },\r\n});\r\nconst emit = defineEmits([\r\n  \"update:inside\",\r\n  \"update:source\",\r\n  \"update:title\",\r\n  \"update:preamble\",\r\n  \"update:version\",\r\n  //\r\n  \"update:loading\",\r\n]);\r\nconst { inside, source, title, preamble, version } = propsToRefs(props, emit);\r\nconst element = ref<HTMLElement | null>(null);\r\nconst nodeVersion = computed({\r\n  get() {\r\n    //   run-kit 的 setNodeVersion 似乎只接受这种形式的输入\r\n    return version!\r\n      .value!.trim()\r\n      .split(\".\")\r\n      .map((v, index) => {\r\n        if (index === 0) {\r\n          return v;\r\n        } else {\r\n          return \"x\";\r\n        }\r\n      })\r\n      .join(\".\");\r\n  },\r\n  set(v: string) {\r\n    version!.value = v;\r\n  },\r\n});\r\n/** 在其他编辑组件未加载完毕的时候使用默认组件 */\r\nemit(\"update:loading\", true);\r\nonMounted(async () => {\r\n  const cell = window.RunKit.createNotebook({\r\n    element: element.value! as HTMLElement,\r\n    preamble: preamble!.value,\r\n    title: title!.value,\r\n    gutterStyle: inside.value,\r\n    source: source!.value,\r\n    nodeVersion: nodeVersion.value,\r\n  });\r\n  cell.onLoad = async (_book) => {\r\n    emit(\"update:loading\", false);\r\n    cell.evaluate();\r\n  };\r\n\r\n  // 各种属性的绑定\r\n  cell.onSave = async () => {\r\n    cell.getSource().then((v) => (source!.value = v));\r\n    cell.getNodeVersion().then((v) => (nodeVersion.value = v));\r\n  };\r\n  watchEffect(() => cell.setSource(source!.value!));\r\n  watchEffect(() => cell.setTitle(title!.value!));\r\n  watchEffect(() => cell.setPreamble(preamble!.value!));\r\n  watchEffect(() => cell.setNodeVersion(nodeVersion.value));\r\n});\r\n</script>\r\n","<template>\r\n  <PrismJs v-if=\"loading\" :source=\"source\"></PrismJs>\r\n  <RunKit\r\n    v-model:source=\"source\"\r\n    v-model:inside=\"inside\"\r\n    v-model:title=\"title\"\r\n    v-model:preamble=\"preamble\"\r\n    v-model:version=\"version\"\r\n    @update:loading=\"(b) => (loading = b)\"\r\n  ></RunKit>\r\n</template>\r\n\r\n<script lang=\"ts\" setup>\r\nimport type { PropType } from \"vue\";\r\nimport { ref } from \"vue\";\r\nimport PrismJs from \"./code-editor/prismjs.vue\";\r\nimport RunKit from \"./code-editor/RunKit.vue\";\r\nimport { propsToRefs } from \"./props-to-refs\";\r\nconst props = defineProps({\r\n  inside: {\r\n    type: String as PropType<EmbedOptions[\"gutterStyle\"]>,\r\n    default: \"inside\",\r\n    required: true,\r\n  },\r\n  source: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  title: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  preamble: {\r\n    type: String,\r\n    default: \"\",\r\n  },\r\n  version: {\r\n    type: String,\r\n    default: \"16.6.0\",\r\n  },\r\n});\r\nconst emit = defineEmits([\r\n  \"update:inside\",\r\n  \"update:source\",\r\n  \"update:title\",\r\n  \"update:preamble\",\r\n  \"update:version\",\r\n]);\r\nconst { inside, source, title, preamble, version } = propsToRefs(props, emit);\r\n\r\n/** 在其他编辑组件加载完毕后隐藏默认组件 */\r\nconst loading = ref(true);\r\n</script>\r\n","/** ════════════════════════🏳‍🌈 实用功能 🏳‍🌈════════════════════════\r\n *  利用 composition-api 实现的一些实用功能\r\n ** ════════════════════════🚧 实用功能 🚧════════════════════════ */\r\nimport { customRef, nextTick, watch, watchEffect, WatchSource } from \"vue\";\r\n\r\nclass PromiseObj<T, Err = Error> {\r\n  pending = false;\r\n  fulfilled = false;\r\n  rejected = false;\r\n  data = {} as T;\r\n  error = {} as Err;\r\n  private p = Promise.resolve() as Promise<unknown>;\r\n  setP(p: Promise<unknown>) {\r\n    this.p = p;\r\n  }\r\n  equalP(p: Promise<unknown>) {\r\n    return this.p === p;\r\n  }\r\n  reLoad() {}\r\n}\r\n\r\ninterface usePromiseComputedOptions<T> {\r\n  /** 函数内的依赖变更的时候就重新计算,指定了 deps 则不会依赖于 getter 内的 ref 了\r\n   *  tips: 可以将其设置为 `()=>[]` 从而不主动执行 getter(), 可以通过调用返回的 reLoad 来调用 getter()\r\n   */\r\n  deps?: WatchSource<any>;\r\n  /** data 的默认值 */\r\n  defaultData?: T;\r\n  getter: () => Promise<T>;\r\n  /** 处理数据是否要和之前的数据进行合并 */\r\n  dataMergeFun?: (oldData: T, newData: T) => T;\r\n}\r\nexport function usePromiseComputed<T, Err = Error>({\r\n  deps,\r\n  getter,\r\n  dataMergeFun = (oldData, newData) => newData,\r\n  defaultData,\r\n}: usePromiseComputedOptions<T>) {\r\n  const r = new PromiseObj<T, Err>();\r\n  if (defaultData !== undefined) {\r\n    r.data = defaultData;\r\n  }\r\n  return customRef<PromiseObj<T, Err>>((track, trigger) => {\r\n    if (!deps) {\r\n      watchEffect(() => update(getter()));\r\n    } else if (deps) {\r\n      if (deps instanceof Function) {\r\n        const depsSource = deps();\r\n        if (Array.isArray(depsSource) && depsSource.length === 0) {\r\n          // 特性，传递空数组则先不执行 getter ，由用户自己决定时机执行 reload\r\n        } else {\r\n          watch(deps, () => update(getter()), { immediate: true });\r\n        }\r\n      } else {\r\n        watch(deps, () => update(getter()), { immediate: true });\r\n      }\r\n    }\r\n    function update(p: Promise<T>) {\r\n      r.setP(p);\r\n      r.pending = true;\r\n      r.fulfilled = false;\r\n      r.rejected = false;\r\n\r\n      // 立即触发会导致死循环，所以包裹一层\r\n      nextTick(trigger);\r\n      p.then((res) => {\r\n        // 避免 「求值fun」 第一次执行产生的 promise 比 第二次产生的后结束 导致 数据错误的采用了第一次的\r\n        if (r.equalP(p)) {\r\n          r.pending = false;\r\n          r.fulfilled = true;\r\n          r.data = dataMergeFun(r.data, res);\r\n        }\r\n      })\r\n        .catch((e) => {\r\n          if (r.equalP(p)) {\r\n            r.pending = false;\r\n            r.rejected = true;\r\n            r.error = e;\r\n          }\r\n        })\r\n        .finally(() => {\r\n          if (r.equalP(p)) {\r\n            trigger();\r\n          }\r\n        });\r\n    }\r\n    r.reLoad = () => {\r\n      update(getter());\r\n    };\r\n    return {\r\n      get() {\r\n        track();\r\n        return r;\r\n      },\r\n      set(newValue) {\r\n        console.warn(\"不可设置值\");\r\n      },\r\n    };\r\n  });\r\n}\r\n\r\n/** 防抖的 ref */\r\nexport function useDebouncedRef<T>(value: T, delay = 200) {\r\n  let timeout = 0;\r\n  return customRef<T>((track, trigger) => {\r\n    return {\r\n      get() {\r\n        track();\r\n        return value;\r\n      },\r\n      set(newValue) {\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(() => {\r\n          value = newValue;\r\n          trigger();\r\n        }, delay) as unknown as number;\r\n      },\r\n    };\r\n  });\r\n}\r\n","import { ref } from \"vue\";\r\n\r\nexport const date$ = ref(new Date());\r\nsetInterval(() => {\r\n  date$.value = new Date();\r\n}, 100);\r\n","import { createApp } from 'vue'\nimport App from './App.vue'\n\nconst app = createApp(App)\napp.mount('#app')\napp.config\n\n\n","<template>\n  <div\n    v-if=\"showSetInfo$\"\n    style=\"position: absolute; background-color: aliceblue; padding: 4px 6px\"\n  >\n    {{\n      setConfig$.pending\n        ? \"保存中\"\n        : setConfig$.fulfilled\n        ? \"保存成功\"\n        : setConfig$.rejected\n        ? \"保存失败\"\n        : \"\"\n    }}\n  </div>\n  <RunCodeVue\n    v-model:source=\"config.source\"\n    v-model:inside=\"config.inside\"\n    v-model:title=\"config.title\"\n    v-model:preamble=\"config.preamble\"\n    v-model:version=\"config.version\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport RunCodeVue from \"./components/run-code.vue\";\nimport {\n  reactive,\n  onBeforeMount,\n  watchEffect,\n  ref,\n  computed,\n  watch,\n} from \"vue\";\n\nimport { api, util, config as apiConfig } from \"siyuan_api_cache_lib\";\nimport { useParamsObj } from \"./util/use-url-params-obj\";\nimport LZString from \"lz-string\";\nimport { usePromiseComputed } from \"./util/vue.composition.api\";\nimport { date$ } from \"./util/date.now\";\n\n// 非开发模式下不用设定 server，使用相对路径来指向 思源server\nif (import.meta.env.DEV) {\n  apiConfig.server = \"http://127.0.0.1:6806\";\n}\n\napiConfig.apiCache = true;\nconst config = reactive({\n  source: \"\",\n  inside: \"inside\" as const,\n  title: \"\",\n  preamble: \"\",\n  version: \"16.6.0\",\n});\nconst setConfig$ = usePromiseComputed({\n  deps: () => [],\n  getter: () =>\n    api.setBlockAttrs({\n      id: util.currentNodeId()!,\n      attrs: { \"custom-config\": JSON.stringify(config) },\n    }),\n});\n\nconst showSetInfo$_t = ref(Date.now());\nwatchEffect(() => {\n  setConfig$.value;\n  showSetInfo$_t.value = Date.now() + 3000;\n});\nconst showSetInfo$ = computed(() => {\n  if (setConfig$.value.pending) {\n    return true;\n  } else if (setConfig$.value.fulfilled || setConfig$.value.rejected) {\n    return showSetInfo$_t.value > date$.value.getTime();\n  } else {\n    return false;\n  }\n});\n\nonBeforeMount(async () => {\n  const id = util.currentNodeId();\n  // 从 url 获取 config，以及将 config 保存至 url\n  const [AppOptions, href] = useParamsObj(undefined, { code: \"{}\" });\n  watchEffect(() => history.replaceState(\"\", \"\", href.value));\n\n  Object.assign(\n    config,\n    JSON.parse(LZString.decompressFromBase64(AppOptions.code) || \"{}\")\n  );\n  watchEffect(() => {\n    AppOptions.code = LZString.compressToBase64(JSON.stringify(config));\n  });\n\n  // 从本地获取 config 的值\n  if (id) {\n    // 此 await 用于避免下面的 `保存 config 到本地` 先于查询执行\n    await api.getBlockAttr(id, \"custom-config\").then((r) => {\n      if (r) {\n        const source = util.htmlDecode(r.value);\n        if (source) {\n          Object.assign(config, JSON.parse(source));\n        } else {\n          console.error(\"decode 失败, code:\", r.value);\n        }\n      }\n      // 没有找到配置项，啥也不做\n    });\n    // 保存 config 到本地\n    if (util.getCurrentEnv() === util.getCurrentEnv.env.siYuan) {\n      watch(config, () => setConfig$.value.reLoad());\n    }\n  } else {\n    console.error(\"获取当前挂件快id失败，不再尝试调用思源 api 保存代码\");\n  }\n});\n</script>\n<style global>\nbody::-webkit-scrollbar {\n  display: none;\n}\nbody {\n  scrollbar-width: none;\n}\n</style>\n","import { reactive, computed } from \"vue\";\r\n\r\n/** 返回一个 params对象 与 href 字符串computed ,href 依赖于 params\r\n * @example\r\n * ```js\r\n *   const [AppOptions, href] = useParamsObj(undefined, {});\r\n *   // 将基于 AppOptions 计算得来的 href 设置到 history\r\n *   watchEffect(() => history.replaceState(\"\", \"\", href.value));\r\n * ```\r\n */\r\nexport function useParamsObj<T extends object>(\r\n  urlStr = document.location.toString(),\r\n  defaultParams: T\r\n) {\r\n  const url = new URL(urlStr);\r\n  const searchParams = url.searchParams;\r\n\r\n  const params = reactive(defaultParams);\r\n\r\n  searchParams.forEach((v, k) => {\r\n    try {\r\n      (params as any)[k] = atob(v);\r\n    } catch (error) {\r\n      // 兼容直接输入的情况\r\n      (params as any)[k] = v;\r\n    }\r\n  });\r\n\r\n  const href = computed(() => {\r\n    Object.keys(params).forEach((k) => {\r\n      const v = btoa((params as any)[k] || \"\");\r\n      searchParams.set(k, v);\r\n    });\r\n    return url.href;\r\n  });\r\n  return [params, href] as const;\r\n}"],"names":["relList","document","createElement","supports","link","querySelectorAll","MutationObserver","mutations","mutation","type","node","addedNodes","tagName","rel","observe","childList","subtree","ep","fetchOpts","script","integrity","referrerpolicy","referrerPolicy","crossorigin","credentials","getFetchOpts","href","p","code","ref","highlightElement","value","props","source","emit","ret","key","computed","get","set","v","inside","title","preamble","version","propsToRefs","element","nodeVersion","trim","split","map","index","join","async","cell","window","RunKit","createNotebook","gutterStyle","onLoad","_book","evaluate","onSave","getSource","then","getNodeVersion","setSource","setTitle","setPreamble","setNodeVersion","loading","constructor","Promise","resolve","setP","p2","equalP","this","reLoad","date$","Date","setInterval","app","createApp","apiCache","config","reactive","setConfig$","deps","getter","dataMergeFun","oldData","newData","defaultData","r","PromiseObj","data","customRef","track","trigger","Function","depsSource","Array","isArray","length","update","immediate","pending","fulfilled","rejected","res","catch","e","error","finally","newValue","warn","usePromiseComputed","api","setBlockAttrs","id","util.currentNodeId","attrs","JSON","stringify","showSetInfo$_t","now","showSetInfo$","getTime","AppOptions","urlStr","location","toString","defaultParams","url","URL","searchParams","params","forEach","k","atob","keys","btoa","useParamsObj","history","replaceState","assign","parse","LZString","decompressFromBase64","compressToBase64","getBlockAttr","util.htmlDecode","util.getCurrentEnv","env","siYuan","mount"],"mappings":"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"}